#!/usr/bin/env python
"""
Lab 3, task 1
"""


import numpy as np
import scipy as sp
import kin_func_skeleton as kfs

def lab3(theta):
    q = np.ndarray((3,8))
    w = np.ndarray((3,7))
    
    q[0:3,0] = [0.0635, 0.2598, 0.1188]
    q[0:3,1] = [0.1106, 0.3116, 0.3885]
    q[0:3,2] = [0.1827, 0.3838, 0.3881]
    q[0:3,3] = [0.3682, 0.5684, 0.3181]
    q[0:3,4] = [0.4417, 0.6420, 0.3177]
    q[0:3,5] = [0.6332, 0.8337, 0.3067]
    q[0:3,6] = [0.7152, 0.9158, 0.3063]
    q[0:3,7] = [0.7957, 0.9965, 0.3058]

    w[0:3,0] = [-0.0059,  0.0113,  0.9999]
    w[0:3,1] = [-0.7077,  0.7065, -0.0122]
    w[0:3,2] = [ 0.7065,  0.7077, -0.0038]
    w[0:3,3] = [-0.7077,  0.7065, -0.0122]
    w[0:3,4] = [ 0.7065,  0.7077, -0.0038]
    w[0:3,5] = [-0.7077,  0.7065, -0.0122]
    w[0:3,6] = [ 0.7065,  0.7077, -0.0038]

    R = np.array([[0.0076, 0.0001, -1.0000],
                          [-0.7040, 0.7102, -0.0053],
                          [0.7102, 0.7040, 0.0055]]).T

    xi = np.ndarray((6,7))
    v_1 = -1 * np.cross(w[0:3,0], q[0:3,0])
    v_2 = -1 * np.cross(w[0:3,1], q[0:3,1])
    v_3 = -1 * np.cross(w[0:3,2], q[0:3,2])
    v_4 = -1 * np.cross(w[0:3,3], q[0:3,3])
    v_5 = -1 * np.cross(w[0:3,4], q[0:3,4])
    v_6 = -1 * np.cross(w[0:3,5], q[0:3,5])
    v_7 = -1 * np.cross(w[0:3,6], q[0:3,6])
    xi[0:6,0] = np.concatenate((v_1, w[0:3,0]))
    xi[0:6,1] = np.concatenate((v_2, w[0:3,1]))
    xi[0:6,2] = np.concatenate((v_3, w[0:3,2]))
    xi[0:6,3] = np.concatenate((v_4, w[0:3,3]))
    xi[0:6,4] = np.concatenate((v_5, w[0:3,4]))
    xi[0:6,5] = np.concatenate((v_6, w[0:3,5]))
    xi[0:6,6] = np.concatenate((v_7, w[0:3,6]))
    g_1 = kfs.prod_exp(xi, theta)

    q = np.array([[0.7957], [0.9965], [0.3058]])
    h = np.hstack((R, q))
    g = np.vstack((h, np.array([0, 0, 0, 1])))

    return np.dot(g_1, g)


if __name__ == "__main__":
    print('Lab 3')
    #lab3()